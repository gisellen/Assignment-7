[{"E:\\coding\\TTP Assignments\\Assignment-07\\src\\index.js":"1","E:\\coding\\TTP Assignments\\Assignment-07\\src\\reportWebVitals.js":"2","E:\\coding\\TTP Assignments\\Assignment-07\\src\\components\\App.js":"3","E:\\coding\\TTP Assignments\\Assignment-07\\src\\components\\SearchField.js":"4","E:\\coding\\TTP Assignments\\Assignment-07\\src\\components\\Search.js":"5","E:\\coding\\TTP Assignments\\Assignment-07\\src\\components\\GifCard.js":"6"},{"size":505,"mtime":1610564994988,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1610564994988,"results":"9","hashOfConfig":"8"},{"size":405,"mtime":1610592320143,"results":"10","hashOfConfig":"8"},{"size":751,"mtime":1610583281517,"results":"11","hashOfConfig":"8"},{"size":1728,"mtime":1610592139827,"results":"12","hashOfConfig":"8"},{"size":281,"mtime":1610592258609,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"jxyqk4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\coding\\TTP Assignments\\Assignment-07\\src\\index.js",[],["29","30"],"E:\\coding\\TTP Assignments\\Assignment-07\\src\\reportWebVitals.js",[],"E:\\coding\\TTP Assignments\\Assignment-07\\src\\components\\App.js",[],"E:\\coding\\TTP Assignments\\Assignment-07\\src\\components\\SearchField.js",["31"],"import React, { Component } from \"react\";\r\nimport Search from './Search'\r\nimport \"../App.css\";\r\n\r\nclass SearchField extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      search: \"\",\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      search: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <form>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"search\"\r\n          placeholder=\"Gif Search\"\r\n          onChange={this.handleChange}\r\n        />\r\n      </form>\r\n      <Search gif={this.state.search} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchField;\r\n","E:\\coding\\TTP Assignments\\Assignment-07\\src\\components\\Search.js",["32","33","34","35","36"],"import React, { Component } from \"react\";\r\nimport SearchField from \"./SearchField\";\r\nimport GifCard from \"./GifCard\";\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      gif: [],\r\n    };\r\n  }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n      if (prevProps.gif !== this.props.gif) {\r\n          this.componentDidMount();\r\n        }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      isLoaded: false,\r\n    });\r\n\r\n    fetch(\"http://api.giphy.com/v1/gifs/search?q=\" + `${this.props.gif}` + \"&api_key=hNr7dizMwEhAZbcrICxMPPESXDlciYAl\")\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          throw new Error(\"No Result\");\r\n        }\r\n        return  response.json();\r\n      })\r\n      .then((result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          gif: [],\r\n        });\r\n        if (result.length !== 0) {\r\n          this.setState({\r\n            isLoaded: true,\r\n            gif: result.data,\r\n          });\r\n          console.log(this.state.gif)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error,\r\n          gif: [],\r\n          isLoaded: true,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, gif } = this.state;\r\n    if(error){\r\n      return <h2>No results</h2>\r\n    } else if (!isLoaded) {\r\n      return <h2>Loading...</h2>\r\n    } else{\r\n      return (\r\n        <div className=\"gif-container\">\r\n              {gif.map((gif)=>(\r\n                  <GifCard url={gif.images.original.url}/>\r\n              ))}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","E:\\coding\\TTP Assignments\\Assignment-07\\src\\components\\GifCard.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":26},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":26},{"ruleId":"41","severity":1,"message":"45","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":19},{"ruleId":"46","severity":1,"message":"47","line":25,"column":52,"nodeType":"48","messageId":"49","endLine":25,"endColumn":53},{"ruleId":"46","severity":1,"message":"47","line":25,"column":74,"nodeType":"48","messageId":"49","endLine":25,"endColumn":75},{"ruleId":"50","severity":1,"message":"51","line":65,"column":17,"nodeType":"52","endLine":65,"endColumn":54},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'SearchField' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]